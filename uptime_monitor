import requests
import smtplib
from email.mime.text import MIMEText
from time import sleep

# Configuration
WEBSITE_URL = 'https://example.com'
CHECK_INTERVAL = 300  # in seconds (5 minutes)
EMAIL_ADDRESS = 'your_email@example.com'
EMAIL_PASSWORD = 'your_password'
RECIPIENT_EMAIL = 'recipient_email@example.com'
SMTP_SERVER = 'smtp.example.com'
SMTP_PORT = 587

def check_website(url):
    """Check if the website is up"""
    try:
        response = requests.get(url)
        return response.status_code == 200
    except requests.exceptions.RequestException as e:
        print(f"Error checking {url}: {e}")
        return False

def send_email(subject, message):
    """Send an email notification"""
    msg = MIMEText(message)
    msg['Subject'] = subject
    msg['From'] = EMAIL_ADDRESS
    msg['To'] = RECIPIENT_EMAIL
    
    try:
        with smtplib.SMTP(SMTP_SERVER, SMTP_PORT) as server:
            server.starttls()
            server.login(EMAIL_ADDRESS, EMAIL_PASSWORD)
            server.sendmail(EMAIL_ADDRESS, RECIPIENT_EMAIL, msg.as_string())
            print("Email sent successfully!")
    except Exception as e:
        print(f"Failed to send email: {e}")

def monitor():
    """Monitor the website's uptime"""
    while True:
        if check_website(WEBSITE_URL):
            print(f"{WEBSITE_URL} is up and running.")
        else:
            print(f"{WEBSITE_URL} is down! Sending notification...")
            send_email(f"Website Down: {WEBSITE_URL}", f"The website {WEBSITE_URL} appears to be down.")
        
        sleep(CHECK_INTERVAL)

if __name__ == "__main__":
    monitor()
